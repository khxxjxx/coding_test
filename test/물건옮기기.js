// 물건 옮기기
// 총 옮겨야 하는 물건 수(m), 옮길수 있는 물건의 개수가 들은 배들의 배열(d)
// 한번에 옮길수 있는 물건의 개수는 한개부터 시작해서 점차 두배로 늘어난다
// 이때 늘어난 물건의 개수가 옮길수 있는 배의 무게보다 더 클면 물건을 옮기는데 실패하고
// 다음 배부터 다시 옮길수 있는 물건의 개수가 한개로 초기화된다
// 물건을 옮기는데 필요한 최소한의 배의 개수를 return하고
// 주어진 배들로 물건을 다 옮기지 못할경우 -1를 return 한다

function solution(d, m) {
  let cnt = 0;
  let obj = 1; // 한번에 옮길수 있는 물건의 개수

  for (let d2 of d) {
    if (m <= 0) {
      // 옮겨야하는 물건의 개수가 0이거나 0보다 작아지면 루프를 종료한다
      break;
    } else if (d2 >= obj) {
      m -= obj; // 옮겨야하는 물건의 개수에서 옮긴 물건의 개수를 빼준다
      obj *= 2; // 한번에 옮길수 있는 물건의 개수는 점차 2배로 늘어난다
      cnt += 1;
    } else {
      obj = 1;
      cnt += 1;
    }
  }

  return m <= 0 ? cnt : -1;
}

// 아래코드는 테스트를 위한 코드입니다.
const d = [1, 2, 4, 8, 16];
let m = 6;

console.log(solution(d, m));
